@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
<form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-nav ml-auto">
    <ul class="navbar-nav ml-auto">
        <li class="nav-item">
            <a class="nav-link" asp-action="UserDetails" asp-controller="RegularUsers">My Profile</a>
        </li>

        <li class="nav-item">
            <a class="nav-link" asp-action="Index" asp-controller="Messages">Messages</a>
        </li>

        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Welcome @UserManager.GetUserName(User)!</a>
        </li>

        <li class="nav-item">
            <button type="submit" class="btn btn-GetInTouch">Logout</button>
        </li>
    </ul>

</form>
}
else
{
    <div class="navbar-nav ml-auto" id="navbarResponsive">

        <ul class="navbar-nav ml-auto">
            <li class="nav-item"><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
            <li class="nav-item"><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
        </ul>
    </div>
}